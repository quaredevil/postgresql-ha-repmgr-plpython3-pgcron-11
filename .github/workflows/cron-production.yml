name: "Trigger Cron Job PostgreSQL"

on:
  push:
    branches:
      - main
  # Triggers the workflow every 03:00 on Wednesday and Sunday.
  schedule:
    #- cron: "0 3 * * 3,6"
    - cron: "0 12 * * *"

 

jobs:
  build-deploy-release:
    runs-on: ubuntu-latest

    environment:
      name: production

    steps:
      #----------------------------------------------
      #       check-out repo
      #----------------------------------------------
      - name: 💾 Repository | Check out
        uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.

      #----------------------------------------------
      # Tag 
      #----------------------------------------------

      - name: 🏷️ Tag | Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      

      - name: 🏷️ Tag | Version
        id: prepare_k8s
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKERHUB_IMAGE }}
          VERSION=${{ secrets.POSTGRESQL_VERSION }}-latest
          TAGS="${DOCKER_IMAGE}:${VERSION}"

          VERSION=${{ secrets.POSTGRESQL_VERSION }}-${{ steps.tag_version.outputs.new_tag }}
          echo ::set-output name=tag_with_version::"${VERSION}"
          echo ::set-output name=image_with_tag::"${DOCKER_IMAGE}:${VERSION}"
          
          TAGS="$TAGS,${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=tags::${TAGS}
          
          echo "Tag(version): ${VERSION}"
          echo "Tags: $TAGS"
          
      
      #----------------------------------------------
      #This is the a separate action that sets up buildx runner
      #----------------------------------------------
      - name: 🐳 Container | Set up Docker Context for Buildx
        id: buildx-context
        run: |
          docker context create builders

      - name: 🐳 Container | Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
          endpoint: builders

      #----------------------------------------------
      #       load cached if cache exists
      #----------------------------------------------
      - name: ⚡️ Cache | Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}


      #----------------------------------------------
      #Log in to Docker Hub
      #----------------------------------------------
      - name: 🐳 Container | Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      

      #----------------------------------------------
      #Build and push
      #----------------------------------------------
      - name: 🐳 Container | Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.prepare_k8s.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      ##----------------------------------------------
      ## Kustomize Build
      ##----------------------------------------------
      #- name: ☸️ K8S | Setup Kustomize
      #  uses: imranismail/setup-kustomize@v1
      #  with:
      #    kustomize-version: ${{ secrets.KUSTOMIZE_VERSION }}

      ##----------------------------------------------
      ## Kustomize Build
      ##----------------------------------------------
      #- name: ☸️ K8S | Update manifests (kustomize)
      #  env:
      #    DOCKERHUB_TAGS: ${{ steps.prepare_k8s.outputs.image_with_tag }}

      #  run: |
      #    cd .k8s/overlays/application
      #    kustomize edit set image container-image-to-change=$DOCKERHUB_TAGS
      #    cat kustomization.yaml

      - name: 🏷️ Tag | Generate new values with tag
        env:
          CHANGE_IMAGE_TAG: ${{ steps.prepare_k8s.outputs.tag_with_version }}
          CHANGE_IMAGE_NAME: ${{ secrets.DOCKERHUB_IMAGE }}
        run: |
          cd .helm
          cat value.yaml | envsubst '$CHANGE_IMAGE_TAG, $CHANGE_IMAGE_NAME' > value_app.yaml
      

      #----------------------------------------------
      # Commit code 
      #----------------------------------------------
      - name: 💾 Repository | Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -am "🤖 change image tag (manifests k8s)"
          git status
          
      #----------------------------------------------
      # Push code 
      #----------------------------------------------
      - name: 💾 Repository | Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          #branch: ${{ github.ref }}
          force: true

      #----------------------------------------------
      # Releases 
      #----------------------------------------------
      - name: 🔖 Release | Generate changelog
        id: changelog
        uses: jaywcjlove/changelog-generator@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filter-author: (jaywcjlove|小弟调调™|dependabot|renovate\\[bot\\]|dependabot\\[bot\\]|Renovate Bot)
          filter: '[R|r]elease[d]\s+[v|V]\d(\.\d+){0,2}'


      - name: 🔖 Release | Publish Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: ${{ steps.tag_version.outputs.new_tag }}
          body: |
            ${{ steps.tag_version.outputs.changelog }}
            
            ### Commits

            ${{ steps.changelog.outputs.changelog }}